{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Swagger 1": {
		"scope": "typescript",
		"prefix": "sw1",
		"body": [
			"ApiModule"
		],
		"description": "ApiModule"
	},


	"Swagger 2": {
		"scope": "typescript",
		"prefix": "sw2",
		"body": [
			"{ provide: BASE_PATH, useValue: 'https://api.angular.schule' }"
		],
		"description": "{ provide: BASE_PATH, useValue: 'https://api.angular.schule' }"
	},


	"Swagger 3": {
		"scope": "typescript",
		"prefix": "sw3",
		"body": [
			"private bookService: BookService"
		],
		"description": "private bookService: BookService"
	},


	"Swagger 4": {
		"scope": "typescript",
		"prefix": "sw3",
		"body": [
			"return this.bookService.booksGet();"
		],
		"description": "return this.bookService.booksGet();"
	},


	"Graphql 1": {
		"scope": "typescript",
		"prefix": "gr1",
		"body": [
			"HttpLinkModule,",
			"ApolloModule"
		],
		"description": "HttpLinkModule, ApolloModule"
	},


	"Graphql 2": {
		"scope": "typescript",
		"prefix": "gr2",
		"body": [
			"constructor(apollo: Apollo, httpLink: HttpLink) {",
			"  apollo.create({",
			"    link: httpLink.create({uri: 'https://api.angular.schule/graphql'}),",
			"    cache: new InMemoryCache()",
			"  });",
			"}",
		],
		"description": "constructor(apollo: Apollo, httpLink: HttpLink)"
	},


	"Graphql 3": {
		"scope": "typescript",
		"prefix": "gr3",
		"body": [
			"const booksQuery = gql`",
			"  query BookList {",
			"    book: books {",
			"      isbn",
			"      title",
			"      description",
			"      rating",
			"      thumbnails {",
			"        url",
			"      }",
			"    }",
			"  }",
			"`;",
		],
		"description": "const booksQuery = gql`"
	},


	"Graphql 4": {
		"scope": "typescript",
		"prefix": "gr4",
		"body": [
			"private apollo: Apollo",
		],
		"description": "private apollo: Apollo"
	},


	"Graphql 5": {
		"scope": "typescript",
		"prefix": "gr5",
		"body": [
			"  getAll(): Observable<BookList.Book[]> {",
			"",
			"    return this.apollo.query<BookList.Query>({",
			"      query: booksQuery,",
			"    })",
			"    .pipe(",
			"      map(({ data }) => data.book)",
			"    );",
			"  }",
		],
		"description": "getAll(): Observable<BookList.Book[]> {"
	}
}